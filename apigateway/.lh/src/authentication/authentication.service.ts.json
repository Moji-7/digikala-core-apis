{
    "sourceFile": "src/authentication/authentication.service.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1701852562038,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1701852562038,
            "name": "Commit-0",
            "content": "\n\n// authentication.service.ts\nimport { Injectable } from '@nestjs/common';\nimport { User } from './user.entity';\nimport { UserRepository } from './user.repository';\n\n@Injectable()\nexport class AuthenticationService {\n  constructor(private readonly userRepository: UserRepository) {}\n\n  async validateUser(username: string, password: string): Promise<any> {\n    const user = await this.userRepository.findOne({ username });\n    if (user && user.password === password) {\n      const { password, ...result } = user;\n      return result;\n    }\n    return null;\n  }\n}\n"
        }
    ]
}