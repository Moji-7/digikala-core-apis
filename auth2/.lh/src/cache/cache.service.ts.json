{
    "sourceFile": "src/cache/cache.service.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1701927549771,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1701927549771,
            "name": "Commit-0",
            "content": "import { CACHE_MANAGER } from '@nestjs/cache-manager';\nimport { Inject, Injectable } from '@nestjs/common';\nimport { Cache } from 'cache-manager';\n@Injectable()\nexport class CacheService {\n  constructor(@Inject(CACHE_MANAGER) private cacheManager: Cache) {}\n\n  async get(key: string) {\n    return await this.cacheManager.get(key);\n  }\n\n  async set(key: string, value: any, ttl?: number) {\n    return await this.cacheManager.set(key, value, ttl);\n  }\n\n  async del(key: string) {\n    return await this.cacheManager.del(key);\n  }"
        }
    ]
}